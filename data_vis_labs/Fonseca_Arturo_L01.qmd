---
title: "L01 Introduction"
subtitle: "Data Visualization (STAT 302)" 
author: "Arturo Fonseca"
format:
  html:
    toc: true
    embed-resources: true
    link-external-newwindow: true
execute:
  warning: false
from: markdown+emoji 
editor_options: 
  chunk_output_type: console
---

::: callout-note
**Make this document your own!** Meaning you should play with the layout and think about removing and adding items like sections (for example you should remove this callout block). Explore quarto markdown to add features like code-folding to your document.
:::

::: callout-warning
This is a template file and may not contain everything seen in the instructions html (`L01_introduction.html`). For example, images or graphs are not usually included in the template. **Rely on the instructions html file for directions, not the template file.**
:::

## Goals

1.  Ensure software for this course is properly installed and functional
2.  Understand the importance of visualization
3.  Develop and follow a proper workflow
4.  Construct and explore a few plots using `ggplot2`
5.  Add layers to a plot that include title, axis, and pre-set themes

**Don't worry if you cannot do everything here by yourself.** You are just getting started and the learning curve is steep, but remember that the instructional team and your classmates will be there to provide support. Persevere and put forth an honest effort and this course will payoff.

```{r}
#| label: load-packages

# Load package(s) - Will be demonstrated in video
library(tidyverse)

# Data can go here as well
load("data/legosets.rda")
```

::: callout-tip
## Organization is important!

1.  All packages should always be loaded at the TOP of the document.

2.  All data should be in your `/data` subdirectory. Data loading should go at the top of the document under the libraries.
:::

## Tasks

Complete the following tasks and **include some indication that you have completed each** in your document.

### Task 1

Download and install [R Software](https://cran.rstudio.com/).

### Task 2

1.  Download and install [RStudio](https://posit.co/download/rstudio-desktop/).
2.  Open RStudio and ensure it and R have been properly installed.
3.  Go to **Tools** \> **Global Options** and change the two indicated settings below and click **Apply**. Your other options are likely different than what is pictured. This is okay and we suggest you leave them as is until you become more familiar with RStudio.

**See html file for missing figure**

### Task 3

Take some time to explore the [Quarto](https://quarto.org/) and [ggplot2](https://ggplot2.tidyverse.org/index.html) websites. We suggest bookmarking them because they will be extremely useful references.

We highly recommend reading through the [Tutorial: Hello, Quarto](https://quarto.org/docs/get-started/hello/rstudio.html).

### Task 4

Install the following packages:

-   `tidyverse`, actually it is a collection/universe of packages being installed
-   `skimr`
-   `devtools`

### Task 5

1.  Download `L01_introduction.zip` from Canvas.
2.  Unzip the file and place the `data_vis_labs` directory where you would like to keep all of your lab work for this course.
3.  Open RStudio and create a project folder for this *existing directory*.
4.  Rename `template_L01.qmd` to your `Lastname_Firstname_L01.qmd`
5.  Render the file with `Cmd/Ctrl + Shift + K` or click the Render button.

### Task 6 (optional)

If you are new to RStudio we strongly recommend reading through Chapters 1-4 of the [Stat 202 text book](https://nustat.github.io/intro-stat-data-sci/)

## Exercise 1

Let's delve into why data visualizations are important.

### Visualization 1

Read the following article and answer the following questions.

[bars_vs_grocery_stores](https://flowingdata.com/2014/05/29/bars-versus-grocery-stores-around-the-world/)

1)  List one thing you learned from the article?

**I learned that Wisconsin has 2.7 times the number of bars as grocery stores.**

2)  How did the main visualization (United States) enhance the article?

**It emphasized the places where drinking culture is more prevalent. For example** **we see a lack of bar superiority in areas engulfed in the Bible Belt.**

3)  List at least one thing you liked about the \[United States\] graphic and one thing you think could be improved.

**I liked color being used not only for classifying, but also that they used saturation** **for magnitude. One thing that could be improved is to each area equally represented** **so that the graphic is truly about bars vs. grocery as opposed to population.**

### Visualization 2

Open this [dashboard](https://edgarruiz.shinyapps.io/db-dashboard/) and answer the following questions.

1)  What story is this dashboard telling and how do the visualizations enhance that?

**The dashboard is telling us which months and airports are the busiest for a given airport. The visualizations provide an easy to interpret bar chart which can be used to easily compare one month/airport to another.**

2)  What might a dashboard provide that a static graphic cannot.

**Interactivity. Perhaps you only want to focus on Delta Airlines. In a graphic, you are restricted to a faceted graph where Delta loses some detail or perhaps it is lumped in with another category.**

::: callout-important
I will work through exercises 2-4 in a video. Please code along and take notes.
:::

## Exercise 2

Let's look at some interesting patterns in the history of LEGO! We'll be using data taken from the [`lego` package](https://github.com/seankross/lego). A copy of the data is located here `data/legosets.rda`.

First, let's look at the average cost of LEGO sets over time. The main variable of interest here is `USD_MSRP`, or the manufacturer's suggested retail price in constant dollars. Let's recreate the following graphic.

:::{.callout-tip}
### Solution
```{r}
#| label: ex2-plot

# data wrangling
yearly_price <- legosets |>
  group_by(Year) |>
  summarize(
    avg_usd_msrp = mean(USD_MSRP, na.rm = TRUE),
    med_usd_msrp = median(USD_MSRP, na.rm = TRUE),
    count = sum(!is.na(USD_MSRP))
  )

# annual price of lego set (line chart)
ggplot(data = yearly_price, mapping = aes(Year, avg_usd_msrp)) +
  geom_line() +
  geom_point() +
  geom_smooth() +
  theme_minimal() +
  labs(
    title = "Average price of legosets",
    subtitle = "Amounts are reported in current USD",
    y = "Average Price (USD)",
    caption = "Souce: LEGO"
  )
```

This plot tells us how the price of lego sets is going up over da years...
:::


## Exercise 3

Let's explore how many unique themes LEGO now offers.

```{r}
#| label: ex3-ugly-plot
#| echo: false

theme_counts <- legosets %>%
  count(Theme)

theme_counts %>%
  ggplot(aes(y = Theme, x = n)) +
  geom_col() +    #or geom_bar(stat = "identity") +
  labs(
    x = "Number of Sets",
    y = NULL
  ) +
  theme_minimal()
```

What is bad/ugly about the plot above?

:::{.callout-tip}
### Solution

**1. There is too much going on. 2. The labels aren't readable. 3. The data isn't sorted. 4. There is no story.**
:::

Now remake the plot BUT with the improvements.

:::{.callout-tip}
### Solution

```{r}
#| label: ex3-fixed
#| echo: false


theme_counts |>
  filter(n >= 100) |>
  mutate(Theme = fct_reorder(Theme, n)) |>
  ggplot(aes(y = Theme, x = n)) +
  geom_col() +    #or geom_bar(stat = "identity") +
  labs(x = "Number of Sets", y = NULL) +
  theme_minimal()

# alternate
theme_counts |>
  filter(n >= 100) |>
  mutate(Theme = fct_reorder(Theme, n)) |>
  ggplot(aes(y = Theme, x = n)) +
  geom_point() +
  geom_segment(aes(0, Theme, xend = n, yend = Theme)) +
  labs(x = "Number of Sets", y = NULL) +
  theme_minimal()
```
:::

## Exercise 4

Now you try, let's look at how the number of pieces per set has changed over time. Because Duplo sets are much smaller (since they're designed for toddlers), we made a special indicator variable for them in the code below.

Use an appropriate graph to plot the average number of pieces over time. Have either separate lines or separate plots for the Duplo and Lego categories. Be sure the title, x-axis, and y-axis are properly labeled.

```{r}
#| label: ex4-data-wrangle

pieces_per_year <- legosets |>
  # new indicator variable
  mutate(Duplo = ifelse(Theme == "Duplo", "Duplo", "Lego")) |>
  group_by(Year, Duplo) |>
  summarize(
    avg_pieces = mean(Pieces, na.rm = TRUE),
    med_pieces = median(Pieces, na.rm = TRUE),
    count = sum(!is.na(Pieces))
  )

pieces_per_year |>
  filter(Year >= 1990) |>
  ggplot(mapping = aes(Year, avg_pieces, color = Duplo)) +
  geom_line() +
  geom_point() +
  theme_minimal() +
  labs(
    title = "Average price of legosets",
    subtitle = "Amounts are reported in current USD",
    y = "Average Price (USD)",
    caption = "Souce: LEGO"
  )

pieces_per_year |>
  filter(Year >= 1990) |>
  ggplot(mapping = aes(Year, avg_pieces)) +
  geom_line() +
  geom_point() +
  facet_wrap(~ Duplo, scales = "free_y", ncol = 1) +
  theme_minimal() +
  labs(
    title = "Average price of legosets",
    subtitle = "Amounts are reported in current USD",
    y = "Average Price (USD)",
    caption = "Souce: LEGO"
  )
```

What trends do you notice in the plots? Are you surprised by the plots?

:::{.callout-tip}
**I notice how stable the Duplo sets' prices are compared to Lego sets. Lego tries to capitalize as much as possible on their Lego sets while playing around with their Duplo sets since they're probably limited in how much they can make with those sets anyway...**
:::
