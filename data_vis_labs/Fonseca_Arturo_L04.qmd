---
title: "L04 Maps"
subtitle: "Data Visualization (STAT 302)" 
author: "Arturo Fonseca"
pagetitle: "L04 Arturo Fonseca"

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    link-external-newwindow: true
    code-fold: show
    fig-dpi: 300
    
execute:
  warning: false

from: markdown+emoji
reference-location: margin
citation-location: margin 
---


## Overview

The goal of this lab is to explore various ways of building maps with `ggplot2`.

Challenges are not mandatory for students to complete. We highly recommend students attempt them though. *We would expect graduate students to attempt the challenges.*

## Datasets

We'll be using the `US_income.rda` dataset which should be placed in the `/data` subdirectory in our **data_vis_labs** project. You'll also be downloading your own data to build maps.

```{r} 
#| label: load-packages

# Load package(s)
library(tidyverse)
library(tigris)
library(sf)

# Load dataset(s)
load("US_income.rda")
```

## Exercise 1

### Plot 1

Make a county map of a US state using `geom_polygon()`. Maybe use your home state or a favorite state. Please do NOT use the state in the ggplot2 book example. 

Optional: Consider adding major cities (or your home town).

*Hints:*

-   See section [6.1](https://ggplot2-book.org/maps.html#polygonmaps) in our book.
-   Void theme

::: {.callout-tip icon="false"}
## Solution

```{r}
il_counties <- map_data("county", "texas") %>% 
  select(lon = long, lat, group, id = subregion)

ggplot(il_counties, aes(lon, lat, group = group)) +
  geom_polygon(color = "grey50", alpha = 0) +
  coord_quickmap() +
  theme_void()
```
:::

### Plot 2

Now use `geom_sf()` instead. You'll need to download data for this. You can use either the `tigris` ([github page](https://github.com/walkerke/tigris)) or `geodata` packages. Either `tigris`' `counties()` with `cb = TRUE` or `geodata`'s `gadm()` could be useful.

::: {.callout-tip icon="false"}
## Solution

```{r}
#| results: hide
tx_data <- counties(state = "TX", cb = T)
```

```{r}
ggplot(tx_data) +
  geom_sf(alpha = 0) +
  coord_sf() +
  theme_void()
```
:::

## Exercise 2

Using the `US_income` dataset, recreate the following graphics as precisely as possible.

```{r}
#| label: ex-2-data-wrangle

# Setting income levels
US_income <- mutate(
  US_income,
  income_bins = cut(
    ifelse(is.na(median_income), 25000, median_income),
    breaks = c(0, 40000, 50000, 60000, 70000, 80000),
    labels = c("< $40k", "$40k to $50k", 
               "$50k to $60k", "$60k to $70k", "> $70k"),
    right = FALSE
  )
)
```

### Plot 1

*Hints:*

-   `geom_sf()` --- boundary color is `"grey80"` and size is 0.2
-   `viridis` package (`discrete = TRUE` in `scale_*` function)
-   Void theme

::: {.callout-tip icon="false"}
## Solution

```{r}
ggplot(US_income) +
  geom_sf(aes(fill = income_bins), color = "grey80", size = 0.2) +
  viridis::scale_fill_viridis(discrete = T) +
  theme_void() +
  labs(fill = "Median income")
```
:::

### Plot 2

*Hints:*

-   `statebins::geom_statebins()`
-   `viridis` package (`discrete = TRUE` in `scale_*` function)
-   Statebins theme

::: {.callout-tip icon="false"}
## Solution

```{r}
US_income
ggplot(US_income) +
  statebins::geom_statebins(aes(state = name, fill = income_bins)) +
  viridis::scale_fill_viridis(discrete = T) +
  theme_void() +
  theme(legend.position = "bottom") +
  labs(fill = "Median income")
```
:::

## Exercise 3

Pick any city or foreign country to build a map for. You can dress it up or make it as basic as you want. Also welcome to try building a graphic like that depicted at the end of section [6.5](https://ggplot2-book.org/maps.html#rastermaps) --- use a different region though.

::: {.callout-tip icon="false"}
## Solution

```{r}
il_data <- counties(state = "IL", cb = T)

il_data |>
  mutate(is_cook = factor(NAME == "Cook", levels = c("TRUE", "FALSE"))) |>
  ggplot() +
  geom_sf(aes(fill = is_cook), color = "black", alpha = 0.5) +
  theme_void() +
  labs(fill = "Cook County?") +
  scale_fill_manual(values = list("TRUE" = "blue", "FALSE" = "red"))
```
:::

## Challenge(s)

::: callout-important

<!-- Graduate students are required to complete this challenge. **It is optional for undergraduate students.** -->

It is optional for everyone, but we highly encourage students to give it a try. Several students in past versions of this course use mapping data like this to for their project. Usually using the `leaflet` or `mapview` packages. This one is done with `mapview`, but as an additional challeneg students could try doing this with `leaflet` too.

:::

Using the `tidycensus` package and few others, try to create a map like below using [these directions](https://walkerke.github.io/tidycensus/articles/spatial-data.html). Try using a different geographical area and a different variable from the ACS.

::: {.callout-tip icon="false"}
## Solution

YOUR SOLUTION HERE

:::

