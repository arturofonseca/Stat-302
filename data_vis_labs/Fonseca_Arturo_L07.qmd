---
title: "L07 Layers"
subtitle: "Data Visualization (STAT 302)" 
author: "Arturo Fonseca"
pagetitle: "L07 Arturo Fonseca"

format:
  html:
    toc: true
    toc-location: left
    embed-resources: true
    code-fold: show
    link-external-newwindow: true
    fig-dpi: 300

execute:
  warning: false

from: markdown+emoji 
reference-location: margin
citation-location: margin
---

## Overview

The goal of this lab is to explore more plots in `ggplot2` and continue to leverage the use of various layers to build complex and well annotated plots. 

## Datasets

We'll be using the `tech_stocks.rda` dataset which is already in the `/data` subdirectory in our **data_vis_labs** project. 

We have a new dataset, `NU_admission_data.csv`, which will need to be downloaded and added to our `/data` subdirectory. 

We will also be using the `mpg` dataset which comes packaged with `ggplot2` --- use `?ggplot2::mpg` to access its codebook.

```{r}
#| label: load-pkgs-data

# load package(s)
library(tidyverse)
library(patchwork)

# load datasets
load("data/tech_stocks.rda")
nu_data <- read_csv("data/NU_admission_data.csv")
```

## Exercise 1

Using `mpg` and the `class_dat` dataset created below, recreate the following graphic as precisely as possible in two different ways.

*Hints:*

- Transparency is 0.6
- Horizontal spread is 0.1
- Larger points are 5
- Larger points are "red"

```{r}
#| label: ex-1

# additional dataset for plot
class_dat <- mpg |>
  group_by(class) |>
  summarise(
    n = n(),
    mean_hwy = mean(hwy),
    label = str_c("n = ", n, sep = "")
  )
```

### Plot 1 -- using `mean_hwy`

::: {.callout-tip icon=false}
## Solution

```{r}
ggplot(mpg, aes(class, hwy)) +
  geom_point() +
  geom_jitter(width = 0.1, height = NULL) +
  geom_text(aes(y = 0, label = label), data = class_dat) +
  geom_point(
    aes(y = mean_hwy),
    data = class_dat,
    color = "red",
    alpha = 0.6,
    size = 5
  ) +
  labs(x = "Highway miles per gallon", y = "Vehicle class") +
  theme_minimal()
```

:::

### Plot 2 -- not using `mean_hwy`

::: {.callout-tip icon=false}
## Solution

```{r}
ggplot(mpg, aes(class, hwy)) +
  geom_point() +
  geom_jitter(width = 0.1, height = NULL) +
  scale_y_continuous(limits = c(0, NA)) +
  stat_summary(
    fun = mean,
    geom = "point",
    color = "red",
    alpha = 0.6,
    size = 5
  ) +
  stat_count(
    aes(label = paste("n = ", ..count..)),
    geom = "text",
    y = 0,
    vjust = 0.5,
    position = "identity"
  ) +
  labs(x = "Highway miles per gallon", y = "Vehicle class") +
  theme_minimal()
```

:::

## Exercise 2

Using the `perc_increase` dataset derived from the `tech_stocks` dataset, recreate the following graphic as precisely as possible.

*Hints:*

- Hex color code `#56B4E9`
- Justification of 1.1
- Size is 5

```{r}
#| label: ex-2

# percentage increase data
perc_increase <- tech_stocks |>
  arrange(desc(date)) |>
  distinct(company, .keep_all = TRUE) |>
  mutate(
    perc = 100 * (price - index_price) / index_price,
    label = str_c(round(perc), "%", sep = ""),
    company = fct_reorder(factor(company), perc)
  )
```

::: {.callout-tip icon=false}
## Solution

```{r}
ggplot(perc_increase, aes(company, perc)) +
  geom_bar(stat = "identity", fill = "#56B4E9") +
  geom_text(
    aes(label = label),
    hjust = 1.1,
    size = 5,
    color = "white"
  ) +
  coord_flip() +
  scale_y_continuous(expand = expansion(0)) +
  labs(x = NULL, y = NULL) +
  theme_minimal()
```

:::

## Exercise 3

:::{.callout-warning}

## Warning

Some thoughtful data wrangling will be needed and it will be demonstrated in class --- **Do not expect a video**.

:::

Examine the data and the plot provided in `undergraduate-admissions-statistics.pdf` --- this pdf was collected from the [Northwestern Data Book webpage](https://www.adminplan.northwestern.edu/ir/data-book/). As you can see they have overlaid two plot types on one another by using dual y-axes. 

There is one major error they make with the bars in their graphic. **Explain what it is.**

::: {.callout-tip icon=false}
## Solution

Looks like they are double counting. They is no reason why they should be stacked like that, unless the green was non-admitted. Each admitted student is also an applicant, and thus also apart of the green bar, but here they are counting it as two different things. The y-axis is labelled applicants, but that's not the case, since it could mark 40K applicants when there were truly only 30K (looking at green bar).

:::

Using `NU_admission_data.csv`^[Data is taken from the pdf. The file includes a few extra years.], create **two separate plots** that display the same information instead of trying to put it all in one single plot --- **stack them** using `patchwork` or `cowplot`. 

Which approach do you find communicates the information better, the single dual y-axes plot or the two separate plot approach? **Why?**

::: {.callout-tip icon=false}
## Solution

I personally like the dual-axis approach. The data is very related, so it makes sense to plot them together and see how one changes as the other does very directly. There isn't too much going on in the plot, so I like that approach.

```{r}
nu_tidy <- nu_data |>
  filter(Year >= 2002, Year <= 2022) |>
  select(!ends_with("Rate")) |>
  pivot_longer(-Year, names_to = "Type", values_to = "Count")

p1 <- ggplot(nu_tidy, aes(Year, Count, fill = Type)) +
  geom_col(position = "identity", width = 0.6) +
  scale_x_continuous(
    name = "Entering Year",
    breaks = scales::breaks_width(1),
    expand = expansion(add = 0.25)
  ) +
  scale_y_continuous(labels = scales::label_comma(), expand = expansion(0)) +
  scale_fill_manual(
    name = NULL,
    limits = c("Matriculants", "Admitted students", "Applications"),
    values = c("#4E2A84", "#836EAA", "#B6ACD1")
  ) +
  geom_text(
    aes(label = scales::comma(Count)),
    vjust = 1,
    nudge_y = -500,
    color = "white",
    size = 2
  ) +
  # labs(title = "Northwestern University", subtitle = "Undergraduate Admissions 2001 - 2021") +
  theme_classic() +
  theme(
    legend.direction = "horizontal",
    legend.position = c(0.5, 1),
    legend.justification = c(0.5, 1),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

p1
```

```{r}
nu_tidy_perc <- nu_data |>
  filter(Year >= 2002, Year <= 2022) |>
  select(Year, ends_with("Rate")) |>
  pivot_longer(-Year, names_to = "Type", values_to = "Count") |>
  mutate(Count = Count / 100)

p2 <- ggplot(nu_tidy_perc,
             aes(
               Year,
               Count,
               group = Type,
               color = Type,
               shape = Type
             ))+
  geom_line() +
  geom_point() +
  scale_x_continuous(
    name = "Entering Year",
    breaks = scales::breaks_width(1),
    expand = expansion(add = 0.25)
  ) +
  scale_y_continuous(name = "Rate", labels = scales::label_percent()) +
  scale_color_manual(name = NULL, values = c("maroon", "skyblue")) +
  guides(shape = "none") +
  geom_text(
    aes(label = scales::percent(round(Count, 2))),
    vjust = 0,
    nudge_y = 0.01,
    color = "black",
    size = 2
  ) +
  # labs(title = "Northwestern University", subtitle = "Undergraduate Admissions 2001 - 2021") +
  theme_classic() +
  theme(
    legend.direction = "horizontal",
    legend.position = c(0.5, 1),
    legend.justification = c(0.5, 1),
    plot.title = element_text(hjust = 0.5),
    plot.subtitle = element_text(hjust = 0.5)
  )

p2
```

:::

*Hints:*

- Form 4 datasets (helps you get organized, but not entirely necessary): 
    - 1 that has bar chart data, 
    - 1 that has bar chart label data, 
    - 1 that has line chart data, and 
    - 1 that has line chart labels 
- Consider using `ggsave()` to save the image with a fixed size so it is easier to pick font sizes.

::: {.callout-tip icon=false}
## Solution

```{r}
p2 / p1 +
  plot_layout(axis_titles = "collect_x", axes = "collect_x") +
  plot_annotation(
    title = "Northwestern University",
    subtitle = "Undergraduate Admissions 2001 - 2021",
    theme = theme(
      plot.title = element_text(hjust = 0.5),
      plot.subtitle = element_text(hjust = 0.5)
    )
  )
```

:::
